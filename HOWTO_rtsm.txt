This release was boot tested on RTSM A15x4 and A15x4-A7x4 models. No rigorous testing was carried out. This build is expected to run on other RTSM models.

h2. Prerequisites

* Install the RTSM model(s) you wish to run. You must have a valid license and the environment set up to run models
* Install "Linaro image tools":https://wiki.linaro.org/Linaro-Image-Tools

h3. Install Linaro Image Tools

Linaro Image Tools contain scripts that allow you to combine multiple components into a single Android image. The components are:

* boot.tar.bz2 - contains the kernel and boot loaders
* system.tar.bz2 - contains the entire system files and general OS
* userdata.tar.bz2 - contains sample data and tests

There are multiple ways you can get the latest Linaro Image Tools:

** Method 1: Install them from the Linaro Image Tools "PPA":https://launchpad.net/~linaro-maintainers/+archive/tools

bc. sudo add-apt-repository ppa:linaro-maintainers/tools
sudo apt-get update
sudo apt-get install linaro-image-tools

** Method 2: Build from source

bc. wget http://releases.linaro.org/13.05/components/platform/linaro-image-tools/linaro-image-tools-2013.05.tar.gz

h2. Create a 2GB image file

RTSM will only deal with file systems up to 2GB in size, however the Linaro pre-built image for Android requires a 4GB filesystem. Therefore, we will build our own image using the pre-built artifacts (displayed above)

The following command downloads all the Android OS components necessary to make up a complete Android image.

bc. wget http://releases.linaro.org/13.05/android/vexpress/boot.tar.bz2
wget http://releases.linaro.org/13.05/android/vexpress/system.tar.bz2
wget http://releases.linaro.org/13.05/android/vexpress/userdata.tar.bz2

Using the @linaro-android-media-create@, which is part of the @linaro-image-tools@, you can combine all the components into a single image.

bc. linaro-android-media-create --image-file linaro.img --image-size 2000M --dev vexpress --boot boot.tar.bz2 --system system.tar.bz2 --userdata userdata.tar.bz2
tar jxvf boot.tar.bz2

h2. Run A15x4 model

This example shows how to run the Linaro kernel on a quad core A15 RTSM model:

bc. RTSM_MODEL=$HOME/ARM/RTSM/Linux64_RTSM_VE_Cortex-A15x4/RTSM_VE_Cortex-A15x4
RTSM_BOOTWRAPPER=boot/rtsm/linux-system-semi.axf
RTSM_MMC=linaro.img
RTSM_KERNEL=boot/uImage
RTSM_DTB=boot/rtsm/rtsm_ve-ca15x4.dtb
RTSM_INITRD=boot/uInitrd
RTSM_CMDLINE=" console=tty0 console=ttyAMA0,38400n8 rootwait ro init=/init androidboot.console=ttyAMA0"

bc. $RTSM_MODEL \
$RTSM_BOOTWRAPPER \
-C motherboard.smsc_91c111.enabled=1 \
-C motherboard.hostbridge.userNetworking=1 \
-C motherboard.mmc.p_mmc_file="$RTSM_MMC" \
-C cluster.cpu0.semihosting-cmd_line="--kernel $RTSM_KERNEL --dtb $RTSM_DTB --initrd $RTSM_INITRD -- $RTSM_CMDLINE"

h2. Run A15x4-A7x4 model

This example shows how to run the Linaro kernel on a big.LITTLE RTSM model:

bc. RTSM_MODEL=$HOME/ARM/RTSM/Linux64_RTSM_VE_Cortex-A15x4-A7x4/RTSM_VE_Cortex-A15x4-A7x4
RTSM_BOOTWRAPPER=boot/rtsm/linux-system-semi.axf
RTSM_MMC=linaro.img
RTSM_KERNEL=boot/uImage
RTSM_DTB=boot/rtsm/rtsm_ve-ca15x4-ca7x4.dtb
RTSM_INITRD=boot/uInitrd
RTSM_CMDLINE=" console=tty0 console=ttyAMA0,38400n8 rootwait ro init=/init androidboot.console=ttyAMA0"

bc. $RTSM_MODEL \
-a coretile.cluster0.*=$RTSM_BOOTWRAPPER \
-a coretile.cluster1.*=$RTSM_BOOTWRAPPER \
-C motherboard.smsc_91c111.enabled=1 \
-C motherboard.hostbridge.userNetworking=1 \
-C motherboard.mmc.p_mmc_file=$RTSM_MMC \
-C coretile.dualclustersystemconfigurationblock.CFG_ACTIVECLUSTER=0x3 \
-C coretile.cluster0.cpu0.semihosting-enable=1 \
-C coretile.cluster0.cpu0.semihosting-cmd_line="--kernel $RTSM_KERNEL --dtb $RTSM_DTB --initrd $RTSM_INITRD -- $RTSM_CMDLINE"
