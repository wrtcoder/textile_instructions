This release was boot tested on FVP A15x4 and A15x4-A7x4 models. No rigorous testing was carried out. This build is expected to run on other models.  No UEFI binary exists for A15-A7 models; in this case, the A15 binary can be used, but the A7 CPUs will not be available

h2. Prerequisites

* Install the model(s) you wish to run. You must have a valid license and the environment set up to run models
* Install "Linaro image tools":https://wiki.linaro.org/Linaro-Image-Tools

h3. Install Linaro Image Tools

Linaro Image Tools contain scripts that allow you to combine multiple components into a single Android image. The components are:

* boot.tar.bz2 - contains the kernel and boot loaders
* system.tar.bz2 - contains the entire system files and general OS
* userdata.tar.bz2 - contains sample data and tests

There are multiple ways you can get the latest Linaro Image Tools:

** Method 1: Install them from the Linaro Image Tools "PPA":https://launchpad.net/~linaro-maintainers/+archive/tools

bc. sudo add-apt-repository ppa:linaro-maintainers/tools
sudo apt-get update
sudo apt-get install linaro-image-tools

** Method 2: Build from source

bc. wget http://releases.linaro.org/14.02/components/platform/linaro-image-tools/linaro-image-tools-2014.02.tar.gz

h2. Create a 2GB image file

Fast Models will only deal with file systems up to 2GB in size, however the Linaro pre-built image for Android requires a 4GB filesystem. Therefore, we will build our own image using the pre-built artifacts (displayed above)

The following command downloads all the Android OS components necessary to make up a complete Android image.

bc. wget http://releases.linaro.org/14.02/android/vexpress-lsk/boot.tar.bz2
wget http://releases.linaro.org/14.02/android/vexpress-lsk/system.tar.bz2
wget http://releases.linaro.org/14.02/android/vexpress-lsk/userdata.tar.bz2

Using the @linaro-android-media-create@, which is part of the @linaro-image-tools@, you can combine all the components into a single image.

bc. linaro-android-media-create --image-file linaro.img --image-size 2000M --dev vexpress --boot boot.tar.bz2 --system system.tar.bz2 --userdata userdata.tar.bz2
tar jxvf boot.tar.bz2

h2. Run Fast Models with UEFI

The instructions for running UEFI on the various models are very similar.  The two differences are the UEFI binary and the model used.  Follow the model specific instruction below, then proceed to the generic instructions in the section "Run the model with UEFI".  Make sure that the model binary is on your path, or alter the MODEL variable definition to include the path to the binary.

h3. Run A9x4 model with UEFI

bc. MODEL=FVP_VE_Cortex-A9_MPx4
UEFI=boot/rtsm/uefi_rtsm_ve-ca9x4.bin

h3. Run A15x1 model with UEFI

bc. MODEL=FVP_VE_Cortex-A15x1
UEFI=boot/rtsm/uefi_rtsm_ve-ca15.bin

h3. Run A15x2 model with UEFI

bc. MODEL=FVP_VE_Cortex-A15x2
UEFI=boot/rtsm/uefi_rtsm_ve-ca15.bin

h3. Run A15x4 model with UEFI

bc. MODEL=FVP_VE_Cortex-A15x4
UEFI=boot/rtsm/uefi_rtsm_ve-ca15.bin

h3. Run the model with UEFI

bc. touch uefi-vars.fd # create the file if it doesn't already exist

bc. $MODEL \
-C motherboard.flashloader0.fname=$UEFI \
-C motherboard.flashloader1.fname=uefi-vars.fd \
-C motherboard.flashloader1.fnameWrite=uefi-vars.fd \
-C motherboard.mmc.p_mmc_file=linaro.img \
-C motherboard.pl011_uart0.unbuffered_output=true \
-C motherboard.smsc_91c111.enabled=1 \
-C motherboard.hostbridge.userNetworking=1

