h1. Building Ubuntu from Source

Ubuntu images are comprised of a Hardware Pack
("HWPack":https://wiki.linaro.org/HardwarePacks) and a root file
system (RootFS).  The hardware pack contains the kernel, boot loader
and Device Tree blobs (if applicable). There is no need to rebuild the
RootFS since it is comprised of a large number of debian
packages. Instead, the best approach is to use an image, which you can
create as outlined in the "Binary Image Installation" tab then replace
the kernel with your compiled one.  This is common practice that many
engineers deploy when wanting a standard Linux image to use for
testing and development purposes.

The following instructions will walk you through how to obtain the kernel
source, build it, and add it to a pre-existing Ubuntu image.

h1. Building Ubuntu Kernel from Source

h2. Pre-requisites

* Ubuntu 12.04 64 bit system. You can download Ubuntu from "ubuntu.com":http://www.ubuntu.com
* git and toolchain. You can get those by typing the following command in your terminal

bc. sudo apt-get install build-essential git gcc-arm-linux-gnueabi

h2. Get the source

You can find this release source "here":http://need_some_path

?? what is the official path for the source code ??
?? We need to offer a tar ball and point them at the git repository ??

Alternatively, you can use GIT to obtain the source code:

bc. 
    git clone git://git.linaro.org/kernel/linux-linaro-tracking.git
    cd linux-linaro-tracking
    git checkout <release tag or commit ID>

?? how do we know what the release tag or commit ID was ??


h3. Create a kernel config

Do not use the defconfig for Versatile Express, instead, build a config from the config fragments that Linaro provides:

bc. 
    ARCH=arm scripts/kconfig/merge_config.sh  \
    linaro/configs/linaro-base.conf \
    linaro/configs/ubuntu.conf \
    linaro/configs/vexpress.conf

Note: the config fragments are part of the git repository and the source tar ball.

h3. Build the kernel

To build the kernel uImage, use the following command:

bc. make ARCH=arm CROSS_COMPILE=arm-linux-gnueabi- uImage

h2. Install your kernel

This section is common for both Android and Ubuntu

* Create the Device Tree blob if you donâ€™t have one in your Linaro
  image (note, the A9 Core Tile boots using an ATAGS kernel so there
  is no need for a device tree blob):

bc. 
    scripts/dtc/dtc -I dts -O dtb -S 8192 arch/arm/boot/dts/vexpress-v2p-ca5s.dts -o v2p-ca5s.dtb
    scripts/dtc/dtc -I dts -O dtb -S 8192 arch/arm/boot/dts/vexpress-v2p-ca15-tc1.dts -o v2p-ca15-tc1.dtb


* Insert the SD card containing the Linaro disk image into your PC SD card reader

* Copy the kernel onto the memory card using

bc.  cp arch/arm/boot/uImage /media/boot/

* Copy the device tree blob
** For **A9** CoreTile:  no device tree blob is needed
** For **A5** CoreTile:  @cp v2p-ca5s.dtb /media/boot/@
** For **A15(TC1)** CoreTile:  @cp v2p-ca15-tc1.dtb /media/boot/@
** For **A15(TC2)** CoreTile:  @cp v2p-ca15-tc2.dtb /media/boot/@
 
* Eject the memory card from your PC by using the following command

bc. eject /media/boot

* Insert the memory card into the Versatile Express board and power it on

* You should boot your Ubuntu image using your own compiled kernel.
